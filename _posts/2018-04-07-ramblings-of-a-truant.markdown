---
layout: post
title:      "The Late Night Ramblings of a Truant"
date:       2018-04-08 03:00:00 +0000
permalink:  ramblings-of-a-truant
---

I set goals a lot. Like, a lot. Sometimes I meet them, other times I don't even get close. It seems like the more long-term the goal, the less likely I am to meet it. It's like I'm hooked on planning out amazing journeys, but overlook the steps and paths to get to the Emerald City.

My yearly goals almost all end up this way. I don't like to call them resolutions. The best word I can think of is 'ideals'. If I hit these 'ideals', I would have an exceptional year. It's now kind of a running gag. I don't like it. But I know if I don't reflect on it too long I know that the feeling of failure of not hitting my goals will just wash over me so that it doesn't stop me from creating more ideals in the future. It's not masochism if it's not actually hurting me, right? Maybe.

In many ways, this self-destructive pattern is hurting me. It wastes my time every time I sit down to plot out some weekly, monthly, or yearly goals. The little spreadsheet creations and the habit-tracking apps and the phone widgets all crowd out other more productive things that I could be doing, like accomplishing the actual goal! Many of the habits can be simply broken down into better chunks and sub-goals that are easier to achieve and add a piece of the puzzle to the larger goal. I feel a lot of new web dev students get trapped into this same type of mentality. I am constantly reading about which editors people are promoting or switching to. There are thousands of browser extensions to help with project creation--extensions for viewing CSS, fonts, viewing JavaScript. If the developer isn't careful, these create a massive timesuck to doing actual coding work. Always trying the latest editor means repeatedly setting up editor extensions and keyboard shortcuts and then learning them. This goes against the best advice I've come across for becoming a developer: "ABC. Always Be Coding".

A developer who spends too much time setting up their environment around them is creating a time debt that is really hard to climb out of if the wrong habits start to crowd out actual productivity. Many of the latest tools don't contribute that much to overcoming debt-creation, they are just iterations of previously developed tools.

It's important to look objectively at what the big chunks to becoming a developer actually are, and attacking them like sub-goals. If the student doesn't have a computer, the first step is to obviously get a computer. However, it does not have to be the latest Macbook. The same goes with a chair. If you're breaking your back sitting on a folding chair, it might be better to buy a good office or gaming chair. However, purchasing the latest standing desk or upgrading to a mechanical keyboard or buying an expensive espresso machine is kind of putting the cart before the horse. At some point your purchases are going to hit the point of diminishing returns, where your consumption patterns and online shopping creep into your time spent inside of the editor and attacking the curriculum and actually building projects.

This is how I feel with my goal setting. Distraction is so easy in 2018. The media around us is so diverse and entertaining and presented in equally diverse and entertaining ways (a la a web developer) that we're self-diagnosing as "attention deficit disorder" -ed humans, and laughing it off in the same breath as just the product of our time. Time spent reading is plummeting. If a blog article takes more than 6 minutes to read, it likely will receive fewer clicks and eyeballs. I think I have the statistic right that 25% of Americans don't even read one book during a year. If we looked at actual written content generated by these same Americans, I'm fairly certain it would be equally trashy and include loads of emojis, poor punctuation, shallow content, and overall just be self-centered.

What does this all mean to a web developer? I'm not even sure. It's a 'chicken or the egg problem' when it comes to defining who's fault this all is, or the old mathematical 'correlation vs causation' argument. Are the media consumption patterns changing how web developers work, or can a web developer buck the trend (and still keep his job)?

Just some rambling food for thought, as I dodge an overdue assignment and graduation...

###5 things that currently have their hooks in me:
  1. 50 hours/week at work
  2. SpaceX launches
  3. tofu burritos
  4. woodpeckers 
  5. car shopping
